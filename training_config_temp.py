
# Custom configuration generated by launcher
class ScaledTrainingConfig:
    def __init__(self):
        # Environment settings
        self.task_variant = 'stack_3_bricks'
        self.max_episode_steps = 1500
        
        # Parallel training settings
        self.n_envs = 8
        self.total_timesteps = 100000
        
        # PPO hyperparameters
        self.learning_rate = 3e-4
        self.n_steps = 2048
        self.batch_size = max(64, 8 * 4)  # Scale batch size
        self.n_epochs = 10
        self.gamma = 0.99
        self.gae_lambda = 0.95
        self.clip_range = 0.2
        self.ent_coef = 0.01
        self.vf_coef = 0.5
        
        # Evaluation settings
        self.eval_freq = max(10_000, 100000 // 100)
        self.n_eval_episodes = 5
        
        # Checkpointing  
        self.checkpoint_freq = max(50_000, 100000 // 20)
        
        # Device settings
        self.device = 'cpu'
        
        # Logging
        import time
        self.project_name = "stacking_robot_sb3"
        self.run_name = "quick_training_" + str(int(time.time()))
        
        # Output directories
        from pathlib import Path
        self.output_dir = Path("./training_results")
        self.models_dir = self.output_dir / "models"
        self.logs_dir = self.output_dir / "logs"
        self.videos_dir = self.output_dir / "videos"
